
/* .grid_container {
    display: flex;
    flex direction: column;
} */

.row {
    display:flex ;
}
.attribute {
    flex: 1;
    border: 1px solid black;
    width: max-content;
    background-color: gray;
    color: white;
    padding: 5px;
}

.explain {
    flex: 3;
    border: 1px solid black;
    padding: 5px;
}


.container {
    /* width: 200px;
    height: 300px; */
    display: grid;
    border: 1px solid black;
    /* grid-template-columns: 100px 100px 100px ; */
    /* grid-template-rows: 100px 100px 100px; */

    /* repeat(개수, 크기) 크기가 같은 박스 여러개 생성*/
    grid-template-columns: repeat(3,100px); 
    grid-template-rows: repeat(3,100px);

    /* minmax로 최소 최대 크기 지정하기 */
    /* grid-template-columns: minmax(10px, 100px) 100px;
    grid-template-rows: minmax(10px,50px) 50px; */

    /*그리드 갭 주기 */
    row-gap: 10px;
    column-gap: 10px;
    /* overflow:auto*/

    /* 그리드 세로 정렬하ㅣ aline-items, aline-self */
    /* stretch, start,center, end */
    /* align-items: stretch; */
    /* align-items: start; */
    /* align-items: center; */
    align-items: end;
  
    /* 그리드 가로 정렬하기 justify intems, justify-self */
    justify-items: strethch;
    justify-items: start;
    justify-items: center;
    justify-items: end;
    
    /* 가로 세로 정렬을 동시에 하는 것 place-items, place-self */
    /* place items: 세로정렬, 가로정렬 */
    place-items: end, center;
}

.grid-item {
    color: white;
    background-color: red;
    border: 1px solid black;
}
.grid-item:nth-child(2n) {
    background-color: rgba(255, 5, 0, 0.3);

}  
    .grid_item:nth-child(1)
{
    align-self :start
}   
    .grid_item :nth-child(2) {
    align-self :end
}   
    .grid_item:nth-child(3) {
    align-self :center
}
   .grid_item:nth-child(4) {
    align-self:start
}
   .grid_item:nth-child(5) {
    align-self :start center
}
   .grid_item:nth-child(6) {
    align-self:center
}
   .grid_item:nth-child(7) {
    align-self :center end
}
   .grid_item:nth-child(8) {
    align-self :end start
}
   .grid_item:nth-child(9){
    align-self :center center}

    /* 그리드 속성을 이용해 위치 지정하기 */
    /* 그리드 레이아웃을 짤 때 속성명을 지정하고 속성을 나열함으로써 레이아웃 구성이 가능
    grid-template-areas */
    /* 속성부여는 grid-area:속성명 */

    /* --졸았음 ㅜ */

    .grid_container2 {
        display: grid;
        border: 1px solid black;
        grid-template-areas: 
            "header header header header"
            "sidebar content content content"
            "footer footer footer footer"
        ;
        row-gap: 10px;
        column-gap: 10px;
    }

    /* 그리드 영역 속성 지정 */
    .grid-item2 {
    color: white;
    background-color: red;
    border: 1px solid black;
}

    #header {
        grid-area: header;
    }

    #sidebar {
        grid-area: sidebar;
    }

    #content {
        grid-area: content;

    }
    #footer {
        grid-area: footer;
    }

    /* 그리드 넘버를 이용해 위치 지정하기 */
    .container3 {
        display: grid;
        border: 1px solid black;

        grid-template-columns: 100px 100px 100px;
        grid-template-rows: repeat(3,100px);
        row-gap: 10px;
        column-gap: 10px;
    }

    .grid-item3 { 
        color: white;
        background-color: red;
        border: 1px solid black;

    }
    /* grid-colunm-start:그리드 번호 */
    /* grid-column-end :그리드 번호*/
     /*grid-row-start :그리드 번호 */
     /* grid-row-end :그리드 번호*/

     /* header */
     .grid-item3:nth-child(1){
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
     }

     /* sidebar */
     .grid-item3:nth-child(2){
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 3;
     }
     /* content */
     .grid-item3:nth-child(3){
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 2;
        grid-row-end: 3;
     }
     /* footer */
     .grid-item3:nth-child(4){
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 3;
        grid-row-end: 4;
     }   